name: e2e-android
on: push

jobs:
  detox-test:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '22.15.0'

      - name: Install pnpm
        run: npm install -g pnpm@10.11.0

      - name: Install dependencies
        run: pnpm install

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Install Android Command-Line Tools
        run: |
          echo "Installing Android SDK Command-Line Tools"
          mkdir -p $ANDROID_HOME/cmdline-tools
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-mac-8512546_latest.zip
          unzip commandlinetools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Set ANDROID_HOME Environment Variable
        run: echo "ANDROID_HOME=$ANDROID_SDK_ROOT" >> $GITHUB_ENV

      - name: Start AVD
        run: |
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-33;google_apis;x86_64"
          echo no | avdmanager create avd -n test -k "system-images;android-33;google_apis;x86_64" --force
          $ANDROID_HOME/emulator/emulator -avd test -no-snapshot -no-window -no-audio -no-boot-anim -gpu swiftshader_indirect &
          adb wait-for-device
          adb shell input keyevent 82
          sleep 30

      - name: Build Detox
        run: pnpm detox build --configuration android.emu.release

      - name: Run Detox Tests
        run: pnpm detox test --configuration android.emu.release --headless
